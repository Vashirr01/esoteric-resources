// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func LoginPage(invalid bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"login-container\"><a href=\"/\" class=\"back-to-home\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M19 12H6M12 5l-7 7 7 7\"></path></svg> Back to Resources</a><h2>Admin Login</h2>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if invalid {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"error-message\">Invalid password</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<form method=\"POST\" action=\"/login\"><input type=\"password\" name=\"password\" placeholder=\"Enter password\" class=\"form-input\" required> <button type=\"submit\" class=\"btn-submit\">Login</button></form></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func ResourceCard(resource Resource, isAdmin bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs("resource-" + resource.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 29, Col: 42}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\" class=\"resource-card\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if isAdmin {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<button hx-delete=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs("/resource/" + resource.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 32, Col: 57}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\" hx-target=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs("#resource-" + resource.Title)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 33, Col: 57}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\" hx-swap=\"outerHTML\" class=\"delete-btn admin-only\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M3 6h18\"></path> <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path> <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path></svg></button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<a href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 templ.SafeURL = templ.SafeURL(resource.Link)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var6)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\" target=\"_blank\" class=\"resource-link\"><div class=\"resource-content\"><div class=\"resource-header\"><img src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Icon)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 47, Col: 43}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\" class=\"resource-icon\" alt=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 49, Col: 44}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "\"><h3 class=\"resource-title\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 51, Col: 63}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</h3></div><div class=\"resource-tags\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, tag := range resource.Tags {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "<span class=\"tag\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(tag)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 55, Col: 47}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "</div><p class=\"resource-description\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var11 string
		templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(resource.Description)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 58, Col: 70}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "</p></div></a></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func MainTemp(resources []Resource, isAdmin bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var12 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var12 == nil {
			templ_7745c5c3_Var12 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "<!doctype html><html lang=\"en\"><head><script src=\"https://unpkg.com/htmx.org@2.0.4\" integrity=\"sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+\" crossorigin=\"anonymous\"></script><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Esoteric Resources</title><style>\n    /* ========== Material 3 Dark Theme ========== */\n    :root {\n        /* Surface Colors */\n        --surface-1: #1C1B1F;       /* Background */\n        --surface-2: #2D2B32;       /* Cards/Dialogs */\n        --surface-3: #3B3841;       /* Hover States */\n        --surface-4: #48454E;       /* Active States */\n\n        /* Primary Colors */\n        --primary: #D0BCFF;         /* Primary Brand */\n        --on-primary: #381E72;      /* Text on Primary */\n        --primary-container: #4F378B;\n        \n        /* Text Colors */\n        --text-high: #E6E1E5;       /* High Emphasis */\n        --text-medium: #C9C5CA;     /* Medium Emphasis */\n        --text-disabled: #79747E;   /* Disabled */\n\n        /* Status Colors */\n        --error: #F2B8B5;\n        --error-container: #8C1D18;\n        --success: #79DD72;\n        --warning: #FFD399;\n\n        /* Borders & Elevation */\n        --outline: #938F99;\n        --surface-variant: #49454F;\n        --elevation-1: 0 1px 3px rgba(0,0,0,0.12);\n        --elevation-2: 0 4px 6px rgba(0,0,0,0.16);\n    }\n\n    /* ========== Base Styles ========== */\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n        transition: background-color 0.2s, opacity 0.2s;\n    }\n\n    body {\n        font-family: 'Roboto', system-ui, sans-serif;\n        background: var(--surface-1);\n        color: var(--text-high);\n        line-height: 1.5;\n        padding: 2rem;\n        min-height: 100vh;\n    }\n\n    a {\n        color: var(--primary);\n        text-decoration: none;\n    }\n\n    /* ========== Resource Grid ========== */\n    #resources-div {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n        gap: 1.5rem;\n        padding: 2rem 0;\n    }\n\n    .resource-card {\n        background: var(--surface-2);\n        border-radius: 16px;\n        padding: 1.5rem;\n        position: relative;\n        box-shadow: var(--elevation-1);\n        border: 1px solid var(--surface-variant);\n    }\n\n    .resource-card:hover {\n        background: var(--surface-3);\n        box-shadow: var(--elevation-2);\n        transform: translateY(-2px);\n    }\n\n    .resource-icon {\n        width: 40px;\n        height: 40px;\n        object-fit: contain;\n        border-radius: 8px;\n        background: var(--surface-1);\n        padding: 6px;\n    }\n\n    .resource-title {\n        font-size: 1.25rem;\n        margin: 1rem 0 0.5rem;\n        color: var(--text-high);\n        font-weight: 500;\n    }\n\n    .resource-description {\n        color: var(--text-medium);\n        font-size: 0.9rem;\n        margin-bottom: 1rem;\n        line-height: 1.4;\n    }\n\n    .resource-tags {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 0.5rem;\n        margin-top: auto;\n    }\n\n    .tag {\n        background: var(--primary-container);\n        color: var(--primary);\n        padding: 0.25rem 0.75rem;\n        border-radius: 8px;\n        font-size: 0.75rem;\n        font-weight: 500;\n    }\n\n    /* ========== Admin Controls ========== */\n    .admin-controls {\n        position: fixed;\n        top: 1.5rem;\n        right: 1.5rem;\n        display: flex;\n        gap: 1rem;\n        z-index: 1000;\n    }\n\n    .logout-btn {\n        background: var(--primary);\n        color: var(--on-primary);\n        padding: 0.75rem 1.25rem;\n        border: none;\n        border-radius: 8px;\n        font-weight: 500;\n        cursor: pointer;\n    }\n\n    /* ========== Forms & Inputs ========== */\n    .login-container {\n        background: var(--surface-2);\n        border-radius: 16px;\n        padding: 2rem;\n        max-width: 400px;\n        margin: 4rem auto;\n        box-shadow: var(--elevation-2);\n    }\n\n    .form-input {\n        width: 100%;\n        padding: 1rem;\n        background: var(--surface-1);\n        border: 2px solid var(--surface-variant);\n        border-radius: 8px;\n        color: var(--text-high);\n        margin-bottom: 1.5rem;\n        font-size: 1rem;\n    }\n\n    .btn-submit {\n        background: var(--primary);\n        color: var(--on-primary);\n        padding: 1rem 2rem;\n        border: none;\n        border-radius: 8px;\n        font-weight: 500;\n        cursor: pointer;\n        width: 100%;\n    }\n\n    /* ========== Delete Button ========== */\n    .delete-btn {\n        position: absolute;\n        top: 1rem;\n        right: 1rem;\n        background: var(--error);\n        color: var(--error-container);\n        padding: 0.5rem;\n        border: none;\n        border-radius: 8px;\n        cursor: pointer;\n        opacity: 0;\n    }\n\n    .resource-card:hover .delete-btn {\n        opacity: 1;\n    }\n\n    /* ========== Typography ========== */\n    h2 {\n        font-size: 2.5rem;\n        font-weight: 700;\n        text-align: center;\n        margin-bottom: 1rem;\n        letter-spacing: -0.02em;\n    }\n\n    h4 {\n        color: var(--text-medium);\n        text-align: center;\n        margin-bottom: 2rem;\n        font-weight: 400;\n    }\n\n    /* ========== Responsive Design ========== */\n    @media (max-width: 768px) {\n        body {\n            padding: 1rem;\n        }\n        \n        #resources-div {\n            grid-template-columns: 1fr;\n        }\n        \n        .resource-card {\n            padding: 1.25rem;\n        }\n        \n        h2 {\n            font-size: 2rem;\n        }\n    }\n\n    /* ========== Utility Classes ========== */\n    .error-message {\n        color: var(--error);\n        background: var(--error-container);\n        padding: 1rem;\n        border-radius: 8px;\n        margin-bottom: 1.5rem;\n    }\n\n    .back-to-home {\n        display: inline-flex;\n        align-items: center;\n        gap: 0.5rem;\n        color: var(--text-medium);\n        margin-bottom: 1.5rem;\n    }\n\n    .back-to-home:hover {\n        color: var(--primary);\n    }\n    #search-wrapper {\n        max-width: 600px;\n        margin: 1.5rem auto;\n        position: relative;\n    }\n\n    #search-wrapper label {\n        position: absolute;\n        top: -1.5rem;\n        left: 0;\n        color: var(--text-medium);\n        font-size: 0.875rem;\n    }\n\n    #search {\n        width: 100%;\n        padding: 1rem;\n        background: var(--surface-1);\n        border: 2px solid var(--surface-variant);\n        border-radius: 8px;\n        color: var(--text-high);\n        font-size: 1rem;\n        transition: border-color 0.2s;\n    }\n\n    #search:focus {\n        outline: none;\n        border-color: var(--primary);\n    }\n</style></head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var13 = []any{templ.Classes("authenticated", isAdmin)}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var13...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "<body class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var14 string
		templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var13).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "\"><main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if isAdmin {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<div class=\"admin-controls\"><form method=\"POST\" action=\"/logout\"><button type=\"submit\" class=\"logout-btn\">Logout</button></form></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "<a href=\"/login\" class=\"login-link\">Admin Login</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<div><h2>esoteric resources</h2><h4>:for cs/math/ml and more </h4></div><div id=\"search-wrapper\"><label for=\"search\">search</label> <input type=\"search\" id=\"search\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if isAdmin {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<button onclick=\"toggleForm()\" class=\"add-resource-btn admin-only\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path></svg> Add Resource</button><div id=\"form-container\" class=\"form-container admin-only\"><form id=\"add-resource\" hx-post=\"/\" hx-swap=\"beforeend\" hx-target=\"#resources-div\" hx-on::after-request=\"\n        if(event.detail.successful) {\n            this.reset();\n            toggleForm();\n        }\"><div class=\"form-group\"><label>Title</label> <input type=\"text\" name=\"title\" class=\"form-input\" required></div><div class=\"form-group\"><label>Description</label> <input type=\"text\" name=\"description\" class=\"form-input\" required></div><div class=\"form-group\"><label>Link</label> <input type=\"text\" name=\"link\" class=\"form-input\" required></div><div class=\"form-group\"><label>Tags (comma separated)</label> <input type=\"text\" name=\"tags\" class=\"form-input\" placeholder=\"math, cs, ml\" required></div><div class=\"form-group\"><label>Icon URL</label> <input type=\"text\" name=\"icon\" class=\"form-input\" required></div><div class=\"form-actions\"><button type=\"submit\" class=\"btn-submit\">Add Resource</button></div></form></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "<div id=\"resources-div\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, resource := range resources {
			templ_7745c5c3_Err = ResourceCard(resource, isAdmin).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "</div></main><script>\n    document.body.addEventListener('htmx:beforeRequest', function(evt) {\n        htmx.config.withCredentials = true;\n    });\n\n    function toggleForm() {\n        const formContainer = document.getElementById('form-container');\n        formContainer.classList.toggle('visible');\n    }\n\n    // Automatically hide form on page load\n    document.addEventListener('DOMContentLoaded', () => {\n        const formContainer = document.getElementById('form-container');\n        if (formContainer) formContainer.classList.remove('visible');\n    });\n\n    // New search functionality\n    document.addEventListener('DOMContentLoaded', () => {\n        const searchInput = document.getElementById('search');\n        const resourceCards = document.querySelectorAll('.resource-card');\n\n        searchInput.addEventListener('input', function() {\n            const searchTerm = this.value.toLowerCase().trim();\n\n            resourceCards.forEach(card => {\n                const title = card.querySelector('.resource-title').textContent.toLowerCase();\n                const description = card.querySelector('.resource-description').textContent.toLowerCase();\n                const tags = Array.from(card.querySelectorAll('.tag'))\n                    .map(tag => tag.textContent.toLowerCase())\n                    .join(' ');\n\n                const matchesSearch = \n                    title.includes(searchTerm) || \n                    description.includes(searchTerm) || \n                    tags.includes(searchTerm);\n\n                card.style.display = matchesSearch ? 'block' : 'none';\n            });\n        });\n    });\n</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
