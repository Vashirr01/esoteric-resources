package main

templ LoginPage(invalid bool) {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <script src="https://unpkg.com/htmx.org@2.0.4" integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+" crossorigin="anonymous"></script>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>Admin Login - Esoteric Resources</title>
        <style>
            :root {
        /* Surface Colors */
        --surface-1: #1C1B1F;       /* Background */
        --surface-2: #2D2B32;       /* Cards/Dialogs */
        --surface-3: #3B3841;       /* Hover States */
        --surface-4: #48454E;       /* Active States */

        /* Primary Colors */
        --primary: #D0BCFF;         /* Primary Brand */
        --on-primary: #381E72;      /* Text on Primary */
        --primary-container: #4F378B;
        
        /* Text Colors */
        --text-high: #E6E1E5;       /* High Emphasis */
        --text-medium: #C9C5CA;     /* Medium Emphasis */
        --text-disabled: #79747E;   /* Disabled */

        /* Status Colors */
        --error: #F2B8B5;
        --error-container: #8C1D18;
        --success: #79DD72;
        --warning: #FFD399;

        /* Borders & Elevation */
        --outline: #938F99;
        --surface-variant: #49454F;
        --elevation-1: 0 1px 3px rgba(0,0,0,0.12);
        --elevation-2: 0 4px 6px rgba(0,0,0,0.16);
    }
           * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        transition: background-color 0.2s, opacity 0.2s;
    }

    body {
        font-family: 'Roboto', system-ui, sans-serif;
        background: var(--surface-1);
        color: var(--text-high);
        line-height: 1.5;
        padding: 2rem;
        min-height: 100vh;
    }

    a {
        color: var(--primary);
        text-decoration: none;
    }
            
  /* ========== Login Page Specific Styles ========== */
   .login-container {
    background: var(--surface-2);
    border-radius: 16px;
    padding: 2rem;
    max-width: 400px;
    margin: 4rem auto;
    box-shadow: var(--elevation-2);
    border: 1px solid var(--surface-variant);
}

.login-container h2 {
    color: var(--text-high);
    margin-bottom: 1.5rem;
}

.login-container .form-input {
    width: 100%;
    padding: 1rem;
    background: var(--surface-1);
    border: 2px solid var(--surface-variant);
    border-radius: 8px;
    color: var(--text-high);
    margin-bottom: 1.5rem;
    font-size: 1rem;
    transition: border-color 0.2s;
}

.login-container .form-input:focus {
    outline: none;
    border-color: var(--primary);
}

.login-container .btn-submit {
    background: var(--primary);
    color: var(--on-primary);
    padding: 1rem 2rem;
    border: none;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    width: 100%;
    transition: background-color 0.2s;
}

.login-container .btn-submit:hover {
    background: color-mix(in srgb, var(--primary) 90%, white);
}

.error-message {
    color: var(--error);
    background: var(--error-container);
    padding: 1rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    text-align: center;
}   
        </style>
    </head>
    <body>
        <div class="login-container">
        <a href="/" class="back-to-home">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M19 12H6M12 5l-7 7 7 7"/>
            </svg>
            Back to Resources
        </a>
        <h2>Admin Login</h2>
        if invalid {
            <div class="error-message">Invalid password</div>
        }
        <form method="POST" action="/login">
            <input 
                type="password" 
                name="password" 
                placeholder="Enter password"
                class="form-input"
                required
            />
            <button type="submit" class="btn-submit">Login</button>
        </form>
    </div>
    </body>
    </html>
}

func SafeID(s string) string {
    // Replace spaces and special characters with dashes
    return strings.Map(func(r rune) rune {
        if r >= 'a' && r <= 'z' || r >= 'A' && r <= 'Z' || r >= '0' && r <= '9' {
            return r
        }
        return '-'
    }, s)
}

templ ResourceCard(resource Resource, isAdmin bool) {
    <div id={ "resource-" + SafeID(resource.Title) } class="resource-card">
        if isAdmin {
            <button 
                hx-delete={ "/resource/" + resource.Title }
                hx-target={ "closest div.resource-card" }
                hx-swap="outerHTML"
                class="delete-btn admin-only">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M3 6h18"></path>
                    <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
                    <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
                </svg>
            </button>
        }
        <a href={ templ.SafeURL(resource.Link) } target="_blank" class="resource-link">
            <div class="resource-content">
                <div class="resource-header">
                    <img 
                        src={ resource.Icon } 
                        class="resource-icon"
                        alt={ resource.Title }
                    />
                    <h3 class="resource-title">{ resource.Title }</h3>
                </div>
                <div class="resource-tags">
                    for _, tag := range resource.Tags {
                        <span class="tag">{ tag }</span>
                    }
                </div>
                <p class="resource-description">{ resource.Description }</p>
            </div>
        </a>
    </div>
}

templ MainTemp(resources []Resource, isAdmin bool) {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <script src="https://unpkg.com/htmx.org@2.0.4" integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+" crossorigin="anonymous"></script>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>esoteric resources</title>
<link rel="icon" type="image/x-icon" href="/assets/favicon.ico">
<link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png">
<link rel="shortcut icon" href="/assets/favicon.ico"/>
<link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png">
<link rel="manifest" href="/assets/site.webmanifest">
<style>
    /* ========== Material 3 Dark Theme ========== */
    :root {
        /* Surface Colors */
        --surface-1: #1C1B1F;       /* Background */
        --surface-2: #2D2B32;       /* Cards/Dialogs */
        --surface-3: #3B3841;       /* Hover States */
        --surface-4: #48454E;       /* Active States */

        /* Primary Colors */
        --primary: #D0BCFF;         /* Primary Brand */
        --on-primary: #381E72;      /* Text on Primary */
        --primary-container: #4F378B;
        
        /* Text Colors */
        --text-high: #E6E1E5;       /* High Emphasis */
        --text-medium: #C9C5CA;     /* Medium Emphasis */
        --text-disabled: #79747E;   /* Disabled */

        /* Status Colors */
        --error: #F2B8B5;
        --error-container: #8C1D18;
        --success: #79DD72;
        --warning: #FFD399;

        /* Borders & Elevation */
        --outline: #938F99;
        --surface-variant: #49454F;
        --elevation-1: 0 1px 3px rgba(0,0,0,0.12);
        --elevation-2: 0 4px 6px rgba(0,0,0,0.16);
    }

    /* ========== Base Styles ========== */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        transition: background-color 0.2s, opacity 0.2s;
    }

    body {
        font-family: 'Roboto', system-ui, sans-serif;
        background: var(--surface-1);
        color: var(--text-high);
        line-height: 1.5;
        padding: 2rem;
        min-height: 100vh;
    }

    a {
        color: var(--primary);
        text-decoration: none;
    }

    /* ========== Resource Grid ========== */
    #resources-div {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    grid-auto-flow: dense;
    gap: 2rem;
    padding: 2rem 0;
}
.resource-header {
                display: flex;
                align-items: center;
                gap: 1rem;
                margin-bottom: 1rem;
            }

            .modal-overlay {
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0, 0, 0, 0.5);
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0;
                pointer-events: none;
                transition: opacity 0.2s;
                z-index: 1000;
            }

            .modal-overlay.visible {
                opacity: 1;
                pointer-events: all;
            }

            .modal-content {
                background: var(--surface-2);
                padding: 2rem;
                border-radius: 16px;
                width: 90%;
                max-width: 500px;
                position: relative;
                transform: translateY(-20px);
                transition: transform 0.2s;
            }

            .modal-overlay.visible .modal-content {
                transform: translateY(0);
            }

            .close-btn {
                position: absolute;
                top: 1rem;
                right: 1rem;
                background: none;
                border: none;
                color: var(--text-medium);
                cursor: pointer;
                padding: 0.5rem;
            }

            .add-resource-btn {
                background: var(--primary);
                color: var(--on-primary);
                padding: 0.75rem 1.5rem;
                border: none;
                border-radius: 8px;
                font-weight: 500;
                cursor: pointer;
                display: flex;
                align-items: center;
                gap: 0.5rem;
                margin: 1rem auto;
                transition: background-color 0.2s;
            }

            .add-resource-btn:hover {
                background: color-mix(in srgb, var(--primary) 90%, white);
            }

            .form-actions {
                display: flex;
                gap: 1rem;
                justify-content: flex-end;
                margin-top: 1.5rem;
            }
.resource-card {
    background: var(--surface-2);
    border-radius: 16px;
    padding: 1.5rem;
    position: relative;
    box-shadow: var(--elevation-1);
    border: 1px solid var(--surface-variant);
}

.resource-card:hover {
    background: var(--surface-3);
    box-shadow: var(--elevation-2);
    transform: translateY(-2px);
}

    .resource-icon {
        width: 40px;
        height: 40px;
        object-fit: contain;
        border-radius: 8px;
        background: var(--surface-1);
        padding: 6px;
    }

    .resource-title {
        font-size: 1.25rem;
        margin: 1rem 0 0.5rem;
        color: var(--text-high);
        font-weight: 500;
    }

    .resource-description {
        color: var(--text-medium);
        font-size: 0.9rem;
        margin-bottom: 1rem;
        line-height: 1.4;
    }

    .resource-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: auto;
    }

    .tag {
        background: var(--primary-container);
        color: var(--primary);
        padding: 0.25rem 0.75rem;
        border-radius: 8px;
        font-size: 0.75rem;
        font-weight: 500;
    }

    /* ========== Admin Controls ========== */
    .admin-controls {
        position: fixed;
        top: 1.5rem;
        right: 1.5rem;
        display: flex;
        gap: 1rem;
        z-index: 1000;
    }

    .logout-btn {
        background: var(--primary);
        color: var(--on-primary);
        padding: 0.75rem 1.25rem;
        border: none;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
    }

    /* ========== Forms & Inputs ========== */
    .login-container {
        background: var(--surface-2);
        border-radius: 16px;
        padding: 2rem;
        max-width: 400px;
        margin: 4rem auto;
        box-shadow: var(--elevation-2);
    }

    .form-input {
        width: 100%;
        padding: 1rem;
        background: var(--surface-1);
        border: 2px solid var(--surface-variant);
        border-radius: 8px;
        color: var(--text-high);
        margin-bottom: 1.5rem;
        font-size: 1rem;
    }

    .btn-submit {
        background: var(--primary);
        color: var(--on-primary);
        padding: 1rem 2rem;
        border: none;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        width: 100%;
    }

    /* ========== Delete Button ========== */
    .delete-btn {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: var(--error);
        color: var(--error-container);
        padding: 0.5rem;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        opacity: 0;
    }

    .resource-card:hover .delete-btn {
        opacity: 1;
    }

    /* ========== Typography ========== */
    h2 {
        font-size: 2.5rem;
        font-weight: 700;
        text-align: center;
        margin-bottom: 1rem;
        letter-spacing: -0.02em;
    }

    h4 {
        color: var(--text-medium);
        text-align: center;
        margin-bottom: 2rem;
        font-weight: 400;
    }

    /* ========== Responsive Design ========== */
    @media (max-width: 768px) {
        body {
            padding: 1rem;
        }
        
        #resources-div {
            grid-template-columns: 1fr;
        }
        
        .resource-card {
            padding: 1.25rem;
        }
        
        h2 {
            font-size: 2rem;
        }
    }

    /* ========== Utility Classes ========== */
    .error-message {
        color: var(--error);
        background: var(--error-container);
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
    }

    .back-to-home {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: var(--text-medium);
        margin-bottom: 1.5rem;
    }

    .back-to-home:hover {
        color: var(--primary);
    }
    #search-wrapper {
        max-width: 600px;
        margin: 1.5rem auto;
        position: relative;
    }

    #search-wrapper label {
        position: absolute;
        top: -1.5rem;
        left: 0;
        color: var(--text-medium);
        font-size: 0.875rem;
    }

    #search {
        width: 100%;
        padding: 1rem;
        background: var(--surface-1);
        border: 2px solid var(--surface-variant);
        border-radius: 8px;
        color: var(--text-high);
        font-size: 1rem;
        transition: border-color 0.2s;
    }

    #search:focus {
        outline: none;
        border-color: var(--primary);
    }
   
@media (max-width: 1200px) {
        #resources-div {
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        }
    }

    @media (max-width: 768px) {
        #resources-div {
            grid-template-columns: 1fr;
        }
    }
</style>
</head>
    <body class={ templ.Classes("authenticated", isAdmin) }>
       <main>
            if isAdmin {
                <div class="admin-controls">
                    <form method="POST" action="/logout">
                        <button type="submit" class="logout-btn">Logout</button>
                    </form>
                </div>
            } else {
                <a href="/login" class="login-link">Admin Login</a>
            }

            <div>
                <h2>esoteric resources</h2>
                <h4>:for cs/math/ml and more </h4>
                <h4>(feel free to dm me any suggestions/recommendations you have on <a href="https://x.com/vashirr01" target="_blank" rel="noopener noreferrer">vashirr01</a>) </h4>
            </div>
            
            <div id="search-wrapper">
                <label for="search">search</label>
                <input type="search" id="search">
            </div>

            if isAdmin {
                <button onclick="toggleForm()" class="add-resource-btn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m-6-6h12"/>
                    </svg>
                    Add Resource
                </button>
                
                <div id="modal-overlay" class="modal-overlay" onclick="toggleForm()">
                    <div class="modal-content" onclick="event.stopPropagation()">
                        <button class="close-btn" onclick="toggleForm()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
                            </svg>
                        </button>
                        <form id="add-resource" 
                            hx-post="/"
                            hx-swap="beforeend"
                            hx-target="#resources-div"
                            hx-on::after-request="
                                if(event.detail.successful) {
                                    this.reset();
                                    toggleForm();
                                }">
                            <div class="form-group">
                                <label>Title</label>
                                <input type="text" name="title" class="form-input" required/>
                            </div>
                            <div class="form-group">
                                <label>Description</label>
                                <input type="text" name="description" class="form-input" required/>
                            </div>
                            <div class="form-group">
                                <label>Link</label>
                                <input type="text" name="link" class="form-input" required/>
                            </div>
                            <div class="form-group">
                                <label>Tags (comma separated)</label>
                                <input type="text" name="tags" class="form-input" placeholder="math, cs, ml" required/>
                            </div>
                            <div class="form-group">
                                <label>Icon URL</label>
                                <input type="text" name="icon" class="form-input" required/>
                            </div>
                            <div class="form-actions">
                                <button type="button" class="btn-submit secondary" onclick="toggleForm()">Cancel</button>
                                <button type="submit" class="btn-submit">Add Resource</button>
                            </div>
                        </form>
                    </div>
                </div>
            }

            <div id="resources-div">
                for _, resource := range resources {
                    @ResourceCard(resource, isAdmin)
                }
            </div>
        </main>        
        <script>
    document.body.addEventListener('htmx:beforeRequest', function(evt) {
        htmx.config.withCredentials = true;
    });

    function toggleForm() {
                const overlay = document.getElementById('modal-overlay');
                overlay.classList.toggle('visible');
            }

    // Automatically hide form on page load
    document.addEventListener('DOMContentLoaded', () => {
        const formContainer = document.getElementById('form-container');
        if (formContainer) formContainer.classList.remove('visible');
    });

    // New search functionality
    document.addEventListener('DOMContentLoaded', () => {
        const searchInput = document.getElementById('search');
        const resourceCards = document.querySelectorAll('.resource-card');

        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase().trim();

            resourceCards.forEach(card => {
                const title = card.querySelector('.resource-title').textContent.toLowerCase();
                const description = card.querySelector('.resource-description').textContent.toLowerCase();
                const tags = Array.from(card.querySelectorAll('.tag'))
                    .map(tag => tag.textContent.toLowerCase())
                    .join(' ');

                const matchesSearch = 
                    title.includes(searchTerm) || 
                    description.includes(searchTerm) || 
                    tags.includes(searchTerm);

                card.style.display = matchesSearch ? 'block' : 'none';
            });
        });
    });
</script>    </body>
    </html>
}
